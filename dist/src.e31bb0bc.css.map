{"version":3,"sources":["_breakpoints.scss","styles.scss","_reset.scss"],"names":[],"mappings":"AA0UA;;;;EAAA;ACxUQ,uFAAA;ACDR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+EE,YAAA;EACA,aAAA;EACA,eAAA;EACA,SAAA;EACA,UAAA;EACA,wBAAA;;;AAGF;EACE,sBAAA;;;AAGF;;;EAGE,mBAAA;;;AAKF;;;;;;;;;;;;;EAaE,cAAA;;;AAIF;;;EAGE,qBAAA;;;AAIF;EACE,SAAA;;;AAIF;EACE,qBAAA;;;AAIF;EACE,uBAAA;EACA,qBAAA;;;AAIF;;EAEE,mBAAA;;;AAIF;EACE,6BAAA;;;AAIF;;EAEE,wBAAA;;;AAKF;;EAEE,SAAA;EACA,UAAA;;;AAKF;EACE,cAAA;EACA,mBAAA;;;AAGF;EACE,cAAA;EACA,eAAA;EACA,YAAA;;;AAGF;;EAEE,UAAA;;;AAGF;EACE,SAAA;EACA,UAAA;EACA,gBAAA;;;ADrLF;EACE,YAAA;EACA,gCAAA;EACA,mBAAA;EACA,iBAAA;;;AAGF;EACE,kBAAA;EACA,kBAAA;EACA,iBAAA;EACA,kBAAA;EACA,iBAAA;;AD8FA;ECnGF;IAOI,iBAAA;;;AD4FF;ECnGF;IAUI,iBAAA;;;;AAIJ;EACE,kBAAA;EACA,kBAAA;EACA,iBAAA;EACA,iBAAA;EACA,oBAAA;;;AAGF;EACE,kBAAA;EACA,kBAAA;EACA,iBAAA;EACA,iBAAA;EACA,oBAAA;;;AAGF;EACE,kBAAA;EACA,kBAAA;EACA,mBAAA;EACA,oBAAA;EACA,qBAAA;;;AAGF;EACE,kBAAA;EACA,kBAAA;EACA,iBAAA;EACA,mBAAA;EACA,iBAAA;;;AAGF;EACE,kBAAA;EACA,kBAAA;EACA,mBAAA;EACA,oBAAA;EACA,iBAAA;;;AAGF;EACE,WAAA;EACA,aAAA;EACA,uHAAA;EAEA,4BAAA;EACA,sBAAA;;ADuCA;EC7CF;IASI,uIAAA;;;;AAKJ;EACE,YAAA;EACA,iBAAA;EACA,kBAAA;;AAEA;EACE,iBAAA;;ADyBF;EC/BF;IAUI,UAAA;IACA,iBAAA;;;;AAIJ;EACE,kBAAA;EACA,iBAAA;;AAEA;EACE,kBAAA;EACA,kBAAA;EACA,mBAAA;EACA,iBAAA;EACA,iBAAA;EACA,qCAAA;EACA,aAAA;EACA,qBAAA;EACA,mBAAA;EACA,yBAAA;;AAEA;EACE,mBAAA;;AAIJ;EACE,aAAA;EACA,qBAAA;;AAEA;EACE,yBAAA;EACA,kBAAA;EACA,kBAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,oBAAA;;AAIJ;EACE,kBAAA;EACA,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,iBAAA;EACA,qCAAA;EACA,aAAA;EACA,qBAAA;EACA,qBAAA;EACA,yBAAA;;AD9BF;EChBF;IAkDI,iBAAA;IACA,cAAA;;;ADnCF;EChBF;IAuDI,iBAAA;IACA,cAAA","file":"src.e31bb0bc.css","sourceRoot":"..\\src","sourcesContent":["$breakpoints: (\r\n  \"phone\": 360px,\r\n  \"tablet\": 768px,\r\n  \"desktop\": 1366px,\r\n  \"LGdesktop\": 1920px,\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///\t\t'retina2x': (\r\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n///\t\t\t'(min-resolution: 192dpi)'\r\n///\t\t)\r\n///\t);\r\n///\r\n$media-expressions: (\r\n  \"screen\": \"screen\",\r\n  \"print\": \"print\",\r\n  \"handheld\": \"handheld\",\r\n  \"retina2x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 2)\",\r\n    \"(min-resolution: 192dpi)\",\r\n  ),\r\n  \"retina3x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 3)\",\r\n    \"(min-resolution: 350dpi)\",\r\n  ),\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  \"px\": 1,\r\n  \"em\": 0.01,\r\n  \"rem\": 0.1,\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\r\n///\r\n@mixin media($conditions...) {\r\n  @for $i from 1 through length($conditions) {\r\n    $conditions: set-nth(\r\n      $conditions,\r\n      $i,\r\n      parse-expression(nth($conditions, $i))\r\n    );\r\n  }\r\n\r\n  $branches: get-query-branches($conditions);\r\n  $query: \"\";\r\n\r\n  @each $branch in $branches {\r\n    @if (str-length($query) != 0) {\r\n      $query: $query + \", \";\r\n    }\r\n\r\n    $query: $query + $branch;\r\n  }\r\n\r\n  @media #{$query} {\r\n    @content;\r\n  }\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n  $result: \"\";\r\n  $has-groups: false;\r\n\r\n  // Getting initial snapshot and looking for groups\r\n  @each $expression in $expressions {\r\n    @if (str-length($result) != 0) {\r\n      $result: $result + \" and \";\r\n    }\r\n\r\n    @if (type-of($expression) == \"string\") {\r\n      $result: $result + $expression;\r\n    } @else if (type-of($expression) == \"list\") {\r\n      $result: $result + nth($expression, 1);\r\n      $has-groups: true;\r\n    } @else {\r\n      @warn '#{$expression} is not a valid expression.';\r\n    }\r\n  }\r\n\r\n  // If we have groups, we have to create all possible combinations\r\n  @if $has-groups {\r\n    @each $expression in $expressions {\r\n      @if (type-of($expression) == \"list\") {\r\n        $first: nth($expression, 1);\r\n\r\n        @each $member in $expression {\r\n          @if ($member != $first) {\r\n            @each $partial in $result {\r\n              $result: join(\r\n                $result,\r\n                str-replace-first($first, $member, $partial)\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n  $operator: \"\";\r\n  $value: \"\";\r\n  $element: \"\";\r\n  $result: \"\";\r\n  $is-width: true;\r\n\r\n  @if (type-of($expression) != \"string\") {\r\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n  }\r\n\r\n  // Separating the operator from the rest of the expression\r\n  @if (str-slice($expression, 2, 2) == \"=\") {\r\n    $operator: str-slice($expression, 1, 2);\r\n    $value: str-slice($expression, 3);\r\n  } @else {\r\n    $operator: str-slice($expression, 1, 1);\r\n    $value: str-slice($expression, 2);\r\n  }\r\n\r\n  // Checking what type of expression we're dealing with\r\n  @if map-has-key($breakpoints, $value) {\r\n    $result: map-get($breakpoints, $value);\r\n  } @else if map-has-key($media-expressions, $expression) {\r\n    $result: map-get($media-expressions, $expression);\r\n    $is-width: false;\r\n  } @else {\r\n    $result: to-number($value);\r\n  }\r\n\r\n  @if ($is-width) {\r\n    $unit: unit($result);\r\n    $interval: 0;\r\n\r\n    @if (map-has-key($unit-intervals, $unit)) {\r\n      $interval: map-get($unit-intervals, $unit);\r\n    } @else {\r\n      @warn 'Unknown unit: #{$unit}';\r\n    }\r\n\r\n    @if ($operator == \">\") {\r\n      $element: \"(min-width: #{$result + $interval})\";\r\n    } @else if ($operator == \"<\") {\r\n      $element: \"(max-width: #{$result - $interval})\";\r\n    } @else if ($operator == \">=\") {\r\n      $element: \"(min-width: #{$result})\";\r\n    } @else if ($operator == \"<=\") {\r\n      $element: \"(max-width: #{$result})\";\r\n    } @else {\r\n      @warn '#{$expression} is missing an operator.';\r\n    }\r\n  } @else {\r\n    $element: $result;\r\n  }\r\n\r\n  @return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n  $search-start: str-index($subject, $search);\r\n\r\n  @if $search-start == null {\r\n    @return $subject;\r\n  }\r\n\r\n  $result: str-slice($subject, 0, $search-start - 1);\r\n  $result: $result + $replace;\r\n  $result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    } @else if $character == \".\" {\r\n      $divider: 1;\r\n    } @else {\r\n      @if type-of($index) != \"number\" {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _length($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      } @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\r\n    \"vh\" \"vmin\" \"vmax\";\r\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\r\n  $index: index($strings, $unit);\r\n\r\n  @if type-of($index) != \"number\" {\r\n    @warn 'Unknown unit `#{$unit}`.';\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}\r\n\r\n/**\r\n*\r\n* Testing\r\n*\r\n**/\r\n","@use '_reset';\n@import \"_breakpoints\";\n@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap\");\n\nbody {\n  color: white;\n  font-family: \"Inter\", sans-serif;\n  font-size: 1.125rem;\n  line-height: 156%;\n}\n\nh1 {\n  font-family: Inter;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 12.5rem;\n  line-height: 100%;\n  @include media(\"<=900px\") {\n    font-size: 9.5rem;\n  }\n  @include media(\"<=550px\") {\n    font-size: 7.5rem;\n  }\n}\n\nh2 {\n  font-family: Inter;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 3.5rem;\n  line-height: 4.25rem;\n}\n\nh3 {\n  font-family: Inter;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 1.5rem;\n  line-height: 1.75rem;\n}\n\nh4 {\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 0.9375rem;\n  line-height: 1.125rem;\n}\n\nh5 {\n  font-family: Inter;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 1.125rem;\n  line-height: 156%;\n}\n\nh6 {\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 0.9375rem;\n  line-height: 187%;\n}\n\n.container {\n  width: 100%;\n  height: 100vh;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)),\n    url(\"./images/content/bg-image-daytime.jpg\");\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  @include media(\">=tablet\", \"<=900px\") {\n    background: linear-gradient(0deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)),\n      url(\"./images/content/tablet/bg-image-daytime.jpg\") no-repeat cover;\n  }\n}\n\n.quote-container {\n  width: 575px;\n  padding-top: 56px;\n  margin-left: 165px;\n\n  #author {\n    padding-top: 13px;\n  }\n\n  @include media(\"<=900px\") {\n    width: 75%;\n    margin-left: 75px;\n  }\n}\n\n.time-container {\n  margin-left: 165px;\n  margin-top: 233px;\n\n  #greeting {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 1.1rem;\n    line-height: 28px;\n    /* identical to box height, or 140% */\n    display: flex;\n    align-items: flex-end;\n    letter-spacing: 4px;\n    text-transform: uppercase;\n\n    img {\n      padding-right: 1rem;\n    }\n  }\n\n  #time {\n    display: flex;\n    align-items: flex-end;\n\n    p {\n      text-transform: uppercase;\n      font-family: Inter;\n      font-style: normal;\n      font-weight: 300;\n      font-size: 2rem;\n      line-height: 28px;\n      padding-bottom: 1rem;\n    }\n  }\n\n  #location {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: bold;\n    font-size: 24px;\n    line-height: 28px;\n    /* identical to box height, or 117% */\n    display: flex;\n    align-items: flex-end;\n    letter-spacing: 4.8px;\n    text-transform: uppercase;\n  }\n\n  @include media(\"<=900px\") {\n    margin-left: 75px;\n    max-width: 75%;\n  }\n\n  @include media(\"<=600px\") {\n    margin-left: 50px;\n    max-width: 95%;\n  }\n}\n","// ### Reset ###\r\nhtml,\r\nbody,\r\ndiv,\r\nspan,\r\napplet,\r\nobject,\r\niframe,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\np,\r\nblockquote,\r\npre,\r\na,\r\nabbr,\r\nacronym,\r\naddress,\r\nbig,\r\ncite,\r\ncode,\r\ndel,\r\ndfn,\r\nem,\r\nimg,\r\nins,\r\nkbd,\r\nq,\r\ns,\r\nsamp,\r\nsmall,\r\nstrike,\r\nstrong,\r\ntt,\r\nvar,\r\nb,\r\nu,\r\ni,\r\ncenter,\r\ndl,\r\ndt,\r\ndd,\r\nol,\r\nul,\r\nli,\r\nfieldset,\r\nform,\r\nlabel,\r\nlegend,\r\ntable,\r\ncaption,\r\ntbody,\r\ntfoot,\r\nthead,\r\ntr,\r\nth,\r\ntd,\r\narticle,\r\naside,\r\ncanvas,\r\ndetails,\r\nembed,\r\nfigure,\r\nfigcaption,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\noutput,\r\nruby,\r\nsection,\r\nsummary,\r\ntime,\r\nmark,\r\naudio,\r\nvideo {\r\n  border: none;\r\n  font: inherit;\r\n  font-size: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  vertical-align: baseline;\r\n}\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*,\r\n*:before,\r\n*:after {\r\n  box-sizing: inherit;\r\n}\r\n\r\n// HTML5 display definitions\r\n// Corrects block display not defined in IE6/7/8/9 & FF3\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmain,\r\nnav,\r\nsection,\r\nsummary,\r\nmain {\r\n  display: block;\r\n}\r\n\r\n// Corrects inline-block display not defined in IE6/7/8/9 & FF3\r\naudio,\r\ncanvas,\r\nvideo {\r\n  display: inline-block;\r\n}\r\n\r\n// Addresses margins handled incorrectly in IE6/7\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\n// Remove list item style\r\nul {\r\n  list-style-type: none;\r\n}\r\n\r\n// Remove the gray background color from active links in IE 10.\r\na {\r\n  background: transparent;\r\n  text-decoration: none;\r\n}\r\n\r\n// Addresses FF3/4 setting line-height on 'input' using !important in the UA stylesheet\r\nbutton,\r\ninput {\r\n  line-height: normal; // 1\r\n}\r\n\r\n// 1. Addresses appearance set to searchfield in Safari 5, Chrome\r\ninput[type=\"search\"] {\r\n  -webkit-appearance: textfield; // 1\r\n}\r\n\r\n// Removes inner padding and search cancel button in S5, Chrome on OS X\r\ninput[type=\"search\"]::-webkit-search-decoration,\r\ninput[type=\"search\"]::-webkit-search-cancel-button {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n// Removes inner padding and border in FF3+\r\n// www.sitepen.com/blog/2008/05/14/the-devils-in-the-details-fixing-dojos-toolbar-buttons/\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n  border: 0;\r\n  padding: 0;\r\n}\r\n\r\n// 1. Removes default vertical scrollbar in IE6/7/8/9\r\n// 2. Improves readability and alignment in all browsers\r\ntextarea {\r\n  overflow: auto; // 1\r\n  vertical-align: top; // 2\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\ntextarea:focus,\r\ninput:focus {\r\n  outline: 0;\r\n}\r\n\r\ninput {\r\n  margin: 0;\r\n  padding: 0;\r\n  appearance: none;\r\n}\r\n"]}